assign(nam, group_news(str_c("2012-0", i)))
}
for (i in 10:12) {
nam <- paste("news.12.", i, sep="")
assign(nam, group_news(str_c("2012-", i)))
}
for (i in 1:9) {
nam <- paste("news.11.0", i, sep="")
assign(nam, group_news(str_c("2011-0", i)))
}
for (i in 10:12) {
nam <- paste("news.11.", i, sep="")
assign(nam, group_news(str_c("2011-", i)))
}
doc <- VectorSource(news.20.06) %>% Corpus
inspect(doc)
doc <- tm_map(doc, content_transformer(tolower))
doc <- tm_map(doc, removeWords, stopwords("english"))
doc <- tm_map(doc, removePunctuation)
DocumentTermMatrix(doc)
inspect(doc)
# bring the csv files
hankyung_df <- read.csv("한경뉴스.csv", fileEncoding="euc-kr")
sk_df <- read.csv("SK이노베이션.csv", fileEncoding="euc-kr")
hankyung_df[1]
hankyung_df[1, 2]
# m <- "YYYY-mm" format input necessary
group_news <- function(m) {
hankyung_titles <- subset(hankyung_df, grepl(m, hankyung_df$dates, fixed=T), select = titles)
hankyung_paragraphs <- subset(hankyung_df, grepl(m, hankyung_df$dates, fixed=T), select = paragraphs)
sk_news_titles <- subset(sk_df, grepl(m, sk_df$dates, fixed=T) & is.na(sk_df$titles) != 1, select = titles)
colnames(hankyung_paragraphs) <- c("titles")
news <- rbind(hankyung_titles, hankyung_paragraphs, sk_news_titles)
return (news)
}
for (i in 1:9) {
nam <- paste("news.19.0", i, sep="")
assign(nam, group_news(str_c("2019-0", i)))
}
for (i in 10:12) {
nam <- paste("news.19.", i, sep="")
assign(nam, group_news(str_c("2019-", i)))
}
for (i in 1:9) {
nam <- paste("news.18.0", i, sep="")
assign(nam, group_news(str_c("2018-0", i)))
}
for (i in 10:12) {
nam <- paste("news.18.", i, sep="")
assign(nam, group_news(str_c("2018-", i)))
}
for (i in 1:9) {
nam <- paste("news.17.0", i, sep="")
assign(nam, group_news(str_c("2017-0", i)))
}
for (i in 10:12) {
nam <- paste("news.17.", i, sep="")
assign(nam, group_news(str_c("2017-", i)))
}
for (i in 1:9) {
nam <- paste("news.16.0", i, sep="")
assign(nam, group_news(str_c("2016-0", i)))
}
for (i in 10:12) {
nam <- paste("news.16.", i, sep="")
assign(nam, group_news(str_c("2016-", i)))
}
for (i in 1:9) {
nam <- paste("news.15.0", i, sep="")
assign(nam, group_news(str_c("2015-0", i)))
}
for (i in 10:12) {
nam <- paste("news.15.", i, sep="")
assign(nam, group_news(str_c("2015-", i)))
}
for (i in 1:9) {
nam <- paste("news.14.0", i, sep="")
assign(nam, group_news(str_c("2014-0", i)))
}
for (i in 10:12) {
nam <- paste("news.14.", i, sep="")
assign(nam, group_news(str_c("2014-", i)))
}
for (i in 1:9) {
nam <- paste("news.13.0", i, sep="")
assign(nam, group_news(str_c("2013-0", i)))
}
for (i in 10:12) {
nam <- paste("news.13.", i, sep="")
assign(nam, group_news(str_c("2013-", i)))
}
for (i in 1:9) {
nam <- paste("news.12.0", i, sep="")
assign(nam, group_news(str_c("2012-0", i)))
}
for (i in 10:12) {
nam <- paste("news.12.", i, sep="")
assign(nam, group_news(str_c("2012-", i)))
}
for (i in 1:9) {
nam <- paste("news.11.0", i, sep="")
assign(nam, group_news(str_c("2011-0", i)))
}
for (i in 10:12) {
nam <- paste("news.11.", i, sep="")
assign(nam, group_news(str_c("2011-", i)))
}
doc <- VectorSource(news.20.06) %>% Corpus
doc <- tm_map(doc, content_transformer(tolower))
doc <- tm_map(doc, removeWords, stopwords("english"))
doc <- tm_map(doc, removePunctuation)
DocumentTermMatrix(doc)
inspect(doc)
news.20.06
source("parse_lib.R")
# bring the csv files
hankyung_df <- read.csv("한경뉴스.csv", fileEncoding="euc-kr")
sk_df <- read.csv("SK이노베이션.csv", fileEncoding="euc-kr")
hankyung_df[1, 2]
str(hankyung_df)
# m <- "YYYY-mm" format input necessary
group_news <- function(m) {
hankyung_titles <- subset(hankyung_df, grepl(m, hankyung_df$dates, fixed=T), select = titles)
hankyung_paragraphs <- subset(hankyung_df, grepl(m, hankyung_df$dates, fixed=T), select = paragraphs)
sk_news_titles <- subset(sk_df, grepl(m, sk_df$dates, fixed=T) & is.na(sk_df$titles) != 1, select = titles)
colnames(hankyung_paragraphs) <- c("titles")
news <- rbind(hankyung_titles, hankyung_paragraphs, sk_news_titles)
return (news)
}
for (i in 1:9) {
nam <- paste("news.19.0", i, sep="")
assign(nam, group_news(str_c("2019-0", i)))
}
for (i in 10:12) {
nam <- paste("news.19.", i, sep="")
assign(nam, group_news(str_c("2019-", i)))
}
for (i in 1:9) {
nam <- paste("news.18.0", i, sep="")
assign(nam, group_news(str_c("2018-0", i)))
}
for (i in 10:12) {
nam <- paste("news.18.", i, sep="")
assign(nam, group_news(str_c("2018-", i)))
}
for (i in 1:9) {
nam <- paste("news.17.0", i, sep="")
assign(nam, group_news(str_c("2017-0", i)))
}
for (i in 10:12) {
nam <- paste("news.17.", i, sep="")
assign(nam, group_news(str_c("2017-", i)))
}
for (i in 1:6) {
nam <- paste("news.20.0", i, sep="")
assign(nam, group_news(str_c("2020-0", i)))
}
for (i in 1:9) {
nam <- paste("news.19.0", i, sep="")
assign(nam, group_news(str_c("2019-0", i)))
}
for (i in 10:12) {
nam <- paste("news.19.", i, sep="")
assign(nam, group_news(str_c("2019-", i)))
}
for (i in 1:9) {
nam <- paste("news.18.0", i, sep="")
assign(nam, group_news(str_c("2018-0", i)))
}
for (i in 10:12) {
nam <- paste("news.18.", i, sep="")
assign(nam, group_news(str_c("2018-", i)))
}
for (i in 1:9) {
nam <- paste("news.17.0", i, sep="")
assign(nam, group_news(str_c("2017-0", i)))
}
for (i in 10:12) {
nam <- paste("news.17.", i, sep="")
assign(nam, group_news(str_c("2017-", i)))
}
for (i in 1:9) {
nam <- paste("news.16.0", i, sep="")
assign(nam, group_news(str_c("2016-0", i)))
}
for (i in 10:12) {
nam <- paste("news.16.", i, sep="")
assign(nam, group_news(str_c("2016-", i)))
}
for (i in 1:9) {
nam <- paste("news.15.0", i, sep="")
assign(nam, group_news(str_c("2015-0", i)))
}
for (i in 10:12) {
nam <- paste("news.15.", i, sep="")
assign(nam, group_news(str_c("2015-", i)))
}
for (i in 1:9) {
nam <- paste("news.14.0", i, sep="")
assign(nam, group_news(str_c("2014-0", i)))
}
for (i in 10:12) {
nam <- paste("news.14.", i, sep="")
assign(nam, group_news(str_c("2014-", i)))
}
for (i in 1:9) {
nam <- paste("news.13.0", i, sep="")
assign(nam, group_news(str_c("2013-0", i)))
}
for (i in 10:12) {
nam <- paste("news.13.", i, sep="")
assign(nam, group_news(str_c("2013-", i)))
}
for (i in 1:9) {
nam <- paste("news.12.0", i, sep="")
assign(nam, group_news(str_c("2012-0", i)))
}
for (i in 10:12) {
nam <- paste("news.12.", i, sep="")
assign(nam, group_news(str_c("2012-", i)))
}
for (i in 1:9) {
nam <- paste("news.11.0", i, sep="")
assign(nam, group_news(str_c("2011-0", i)))
}
for (i in 10:12) {
nam <- paste("news.11.", i, sep="")
assign(nam, group_news(str_c("2011-", i)))
}
useNIADic()
doc <- VectorSource(news.20.06) %>% Corpus
inspect(doc)
doc <- VectorSource(news.20.06) %>% Corpus
inspect(doc)
doc <- tm_map(doc, content_transformer(tolower))
doc <- tm_map(doc, removeWords, stopwords("english"))
doc <- tm_map(doc, removePunctuation)
inspect(doc)
DocumentTermMatrix(doc)
dtm <- DocumentTermMatrix(doc)
inspect(dtm)
news.20.06
news.20.06[1, 2]
news.20.06[1]
class(news.20.06)
dim(news.20.06)
news.20.06[1, 1]
doc <- VectorSource(news.20.06) %>% Corpus
inspect(doc)
length(inspect(doc))
length(inspect(doc)[1])
length(inspect(doc)[[1]])
install.packages("extrafont")
TermDocumentMatrix(doc)
dtm <- TermDocumentMatrix(doc)
inspect(dtm)
dtm <- DocumentTermMatrix(doc)
inspect(dtm)
as.matrix(news.20.06)
news.20.06 <- as.matrix(news.20.06)
doc <- VectorSource(news.20.06) %>% Corpus
inspect(doc)
doc <- tm_map(doc, content_transformer(tolower))
doc <- tm_map(doc, removeWords, stopwords("english"))
doc <- tm_map(doc, removePunctuation)
inspect(doc)
dtm <- DocumentTermMatrix(doc)
inspect(dtm)
table(unlist(dtm))
sort(table(unlist(dtm)))
sort(table(unlist(dtm)), decreasing=T)
dtm <- DocumentTermMatrix(doc)
inspect(dtm)
inspect(doc[1])
inspect(doc[2])
inspect(doc)
news.20.06 <- as.matrix(news.20.06)
news.20.06
doc <- VectorSource(news.20.06) %>% Corpus
inspect(doc)
sk_df <- data.frame(apply(sk_df, 2, parse_string), stringsAsFactors = F)
dim(sk_df)
str(sk_df)
sk_df[, -1]
as.integer(sk_df[, -1])
apply(sk_df[,-c(1, 2)], 2, as.integer)
sk_df[, -c(1, 2)] <- apply(sk_df[,-c(1, 2)], 2, as.integer)
str(sk_df)
write.csv(sk_df, "SK이노베이션.csv", row.names= F)
sk_df <- read.csv("SK이노베이션.csv", fileEncoding="euc-kr")
# m <- "YYYY-mm" format input necessary
group_news <- function(m) {
hankyung_titles <- subset(hankyung_df, grepl(m, hankyung_df$dates, fixed=T), select = titles)
hankyung_paragraphs <- subset(hankyung_df, grepl(m, hankyung_df$dates, fixed=T), select = paragraphs)
sk_news_titles <- subset(sk_df, grepl(m, sk_df$dates, fixed=T) & is.na(sk_df$titles) != 1, select = titles)
colnames(hankyung_paragraphs) <- c("titles")
news <- rbind(hankyung_titles, hankyung_paragraphs, sk_news_titles)
return (news)
}
for (i in 1:6) {
nam <- paste("news.20.0", i, sep="")
assign(nam, group_news(str_c("2020-0", i)))
}
for (i in 1:9) {
nam <- paste("news.19.0", i, sep="")
assign(nam, group_news(str_c("2019-0", i)))
}
for (i in 10:12) {
nam <- paste("news.19.", i, sep="")
assign(nam, group_news(str_c("2019-", i)))
}
for (i in 1:9) {
nam <- paste("news.18.0", i, sep="")
assign(nam, group_news(str_c("2018-0", i)))
}
for (i in 10:12) {
nam <- paste("news.18.", i, sep="")
assign(nam, group_news(str_c("2018-", i)))
}
for (i in 1:9) {
nam <- paste("news.17.0", i, sep="")
assign(nam, group_news(str_c("2017-0", i)))
}
for (i in 10:12) {
nam <- paste("news.17.", i, sep="")
assign(nam, group_news(str_c("2017-", i)))
}
for (i in 1:9) {
nam <- paste("news.16.0", i, sep="")
assign(nam, group_news(str_c("2016-0", i)))
}
for (i in 10:12) {
nam <- paste("news.16.", i, sep="")
assign(nam, group_news(str_c("2016-", i)))
}
for (i in 1:9) {
nam <- paste("news.15.0", i, sep="")
assign(nam, group_news(str_c("2015-0", i)))
}
for (i in 10:12) {
nam <- paste("news.15.", i, sep="")
assign(nam, group_news(str_c("2015-", i)))
}
for (i in 1:9) {
nam <- paste("news.14.0", i, sep="")
assign(nam, group_news(str_c("2014-0", i)))
}
for (i in 10:12) {
nam <- paste("news.14.", i, sep="")
assign(nam, group_news(str_c("2014-", i)))
}
for (i in 1:9) {
nam <- paste("news.13.0", i, sep="")
assign(nam, group_news(str_c("2013-0", i)))
}
for (i in 10:12) {
nam <- paste("news.13.", i, sep="")
assign(nam, group_news(str_c("2013-", i)))
}
for (i in 1:9) {
nam <- paste("news.12.0", i, sep="")
assign(nam, group_news(str_c("2012-0", i)))
}
for (i in 10:12) {
nam <- paste("news.12.", i, sep="")
assign(nam, group_news(str_c("2012-", i)))
}
for (i in 1:9) {
nam <- paste("news.11.0", i, sep="")
assign(nam, group_news(str_c("2011-0", i)))
}
for (i in 10:12) {
nam <- paste("news.11.", i, sep="")
assign(nam, group_news(str_c("2011-", i)))
}
news.20.06 <- as.matrix(news.20.06)
doc <- VectorSource(news.20.06) %>% Corpus
inspect(doc)
doc <- tm_map(doc, content_transformer(tolower))
doc <- tm_map(doc, removeWords, stopwords("english"))
doc <- tm_map(doc, removePunctuation)
inspect(doc)
dtm <- DocumentTermMatrix(doc)
inspect(dtm)
dtm[1]
inspect(dtm[1])
inspect(dtm)
as.matrix(dtm)
Encoding(dtm$dimnames$Terms) = 'UTF-8'
as.matrix(dtm)
tdm <- TermDocumentMatrix(doc)
Encoding(dtm$dimnames$Terms) = 'UTF-8'
Encoding(tdm$dimnames$Terms) = 'UTF-8'
as.matrix(dtm)
as.matrix(tdm)
Encoding(rownames(tdm)) <- 'UTF-8'
as.matrix(tdm)
guess_encoding(tdm)
tdm$dimnames$Terms
Encoding(rownames(tdm)) <- 'UTF-8'
as.matrix(tdm)
Sys.setlocale("LC_ALL", "korean")
doc <- VectorSource(news.20.06) %>% VCorpus
doc <- tm_map(doc, content_transformer(tolower))
doc <- tm_map(doc, removeWords, stopwords("english"))
doc <- tm_map(doc, removePunctuation)
inspect(doc)
tdm <- TermDocumentMatrix(doc)
Encoding(rownames(tdm)) <- 'UTF-8'
as.matrix(tdm)
doc <- VectorSource(news.20.06) %>% VCorpus
doc <- tm_map(doc, content_transformer(tolower))
doc <- tm_map(doc, removeWords, stopwords("english"))
doc <- tm_map(doc, removePunctuation)
tdm <- TermDocumentMatrix(doc)
as.matrix(tdm)
dim(as.matrix(tdm))
dtm <- DocumentTermMatrix(doc)
as.matrix(dtm)
dim(as.matrix(dtm))
table(as.matrix(dtm))
as.vector(dtm)
sum(as.vector(dtm))
length(dtm)
dtm
as.matrix(dtm)
dim(as.matrix(dtm))
news.20.05 <- as.matrix(news.20.05)
doc.20.05 <- VectorSource(news.20.05) %>% VCorpus
inspect(doc.20.05)
doc.20.05 <- tm_map(doc.20.05, content_transformer(tolower))
doc.20.05 <- tm_map(doc.20.05, removeWords, stopwords("english"))
doc.20.05 <- tm_map(doc.20.05, removePunctuation)
dtm.20.05 <- DocumentTermMatrix(doc.20.05)
dtm.20.05
dim(dtm.20.05)
as.matrix(dtm.20.05)
as.matrix(dtm)
as.matrix(dtm.20.05)
doc.20.05 <- VectorSource(news.20.05) %>% VCorpus
inspect(doc.20.05)
doc.20.05 <- tm_map(doc.20.05, content_transformer(tolower))
doc.20.05 <- tm_map(doc.20.05, removeWords, stopwords("english"))
doc.20.05 <- tm_map(doc.20.05, removePunctuation)
doc.20.05
inspect(doc.20.05)
inspect(doc)
dim(news.20.05)
dim(doc)
dim(news.20.06)
inspect(doc.20.05)
DocumentTermMatrix(doc.20.05)
DocumentTermMatrix(doc)
dtm$dimnames$Terms
dtm.20.05$dimnames$Terms
doc.20.05 <- tm_map(doc.20.05, stripWhitespace)
inspect(doc.20.05)
DocumentTermMatrix(doc.20.05)
dtm.20.05 <- DocumentTermMatrix(doc.20.05)
dtm.20.05$dimnames$Terms
news.20.05 <- as.matrix(news.20.05)
doc.20.05 <- VectorSource(news.20.05) %>% VCorpus
inspect(doc.20.05)
doc.20.05 <- tm_map(doc.20.05, content_transformer(tolower))
doc.20.05 <- tm_map(doc.20.05, removeWords, stopwords("english"))
doc.20.05 <- tm_map(doc.20.05, removePunctuation)
doc.20.05 <- tm_map(doc.20.05, stripWhitespace)
inspect(doc.20.05)
dtm.20.05 <- DocumentTermMatrix(doc.20.05)
dtm.20.05$dimnames$Terms
inspect(dtm.20.05)
as.matrix(inspect(dtm.20.05))
dim(as.matrix(inspect(dtm.20.05)))
news.20.05 <- as.matrix(news.20.05)
doc.20.05 <- VectorSource(news.20.05) %>% VCorpus
inspect(doc.20.05)
doc.20.05 <- tm_map(doc.20.05, content_transformer(tolower))
doc.20.05 <- tm_map(doc.20.05, removeWords, stopwords("english"))
doc.20.05 <- tm_map(doc.20.05, removePunctuation)
inspect(doc.20.05)
dtm.20.05 <- DocumentTermMatrix(doc.20.05)
as.matrix(inspect(dtm.20.05))
dtm.20.05$dimnames$Terms
as.matrix(dtm.20.05)
as.matrix(dtm)
news.20.06 <- as.matrix(news.20.06)
doc <- VectorSource(news.20.06) %>% VCorpus
inspect(doc)
doc <- tm_map(doc, content_transformer(tolower))
doc <- tm_map(doc, removeWords, stopwords("english"))
doc <- tm_map(doc, removePunctuation)
dim(news.20.06)
dtm <- DocumentTermMatrix(doc)
dtm$dimnames$Terms
as.matrix(dtm)
news.20.05 <- as.matrix(news.20.05)
doc.20.05 <- VectorSource(news.20.05) %>% VCorpus
inspect(doc.20.05)
doc.20.05 <- tm_map(doc.20.05, content_transformer(tolower))
doc.20.05 <- tm_map(doc.20.05, removeWords, stopwords("english"))
doc.20.05 <- tm_map(doc.20.05, removePunctuation)
inspect(doc.20.05)
dtm.20.05 <- DocumentTermMatrix(doc.20.05)
dtm.20.05$dimnames$Terms
dtm.20.05$dimnames$Docs
as.matrix(dtm.20.05)
as.matrix(dtm.20.05)[1]
dtm.20.05 <- as.matrix(dtm.20.05)
dtm <- as.matrix(dtm)
dtm
dim(dtm)
dim(dtm.20.05)
